//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Common;


namespace CoreComponents.Data
{


	public abstract class Transaction : IDisposable
	{

		protected DbConnection myConnection;
		
		protected DbTransaction myTransaction;
		
		protected bool myIsActive;
		
		protected CallMe myStop;
		
		public Transaction(DbConnection Connection)
		{
			
			myConnection = Connection;
					
			DoNothin();
			
		}
		
		void Initalise()
		{
			
			myStop = Commit;
			
		}
		
		void DoNothin()
		{
			
			myStop = Nothin;
			
		}
		
		public bool IsActive
		{
			
			get
			{
				
				return myIsActive;
				
			}
			
		}
		
		public bool IsCommiting
		{
			
			set
			{
				
				if(myIsActive)
				{
				
					if(value)
					{
						
						if(!IsCommiting)
							Initalise();
						
					
					} else
					{
						
						if(!IsRollingBack)
							myStop = RollBack;
							
					}
					
				}
				
			}
			get
			{
				
				return myStop == Commit;
				
			}
		}
		
		public bool IsRollingBack
		{
			
			set
			{
				
				if(myIsActive)
				{
				
					if(value)
					{
						
						if(!IsRollingBack)
							myStop = RollBack;
						
					
					} else
					{
						
						if(!IsCommiting)
						    Initalise();
							
					}
					
				}
				
			}
			get
			{
			
				return myStop == RollBack;
				
			}
			
		}
		
		void Active()
		{
			
			Initalise();
			
			myIsActive = true;
			
		}
		
		void InActive()
		{
			
			myIsActive = false;
			
			DoNothin();
			
		}
		
		public void Begin()
		{
			
			if(!myIsActive)
			{
			
				myTransaction = myConnection.BeginTransaction();
			
				Active();
				
			}
		}
		
		public void Stop()
		{
			
			myStop();
			
		}
		
		public void Dispose()
		{
			
			myStop();
			
		}
		
		//Called through myStop.
		void Commit()
		{
		
			if(myIsActive)
			{
			
				myTransaction.Commit();
			
				InActive();
				
			}
			
		}
		
		//Called through myStop.
		void RollBack()
		{
			
			if(myIsActive)
			{
			
				myTransaction.Rollback();
			
				InActive();
				
			}
			
		}
		
		//Do Nothin
		void Nothin()
		{
			
		}
		
		public bool IsInThisTransaction(DbConnection Connection)
		{
			
			return object.ReferenceEquals(myConnection, Connection);
			
		}
	}
}
