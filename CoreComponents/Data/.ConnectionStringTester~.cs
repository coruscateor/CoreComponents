//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;

namespace CoreComponents.Data
{
	
	public class ConnectionTester
	{
		
		DbConnection myConnection;
		
		public event Gimmie<ChangeEventArgs<KeyValuePair<bool, string>, ConnectionstringTester>> Connecting;
		
		public event Gimmie<ChangeEventArgs<KeyValuePair<bool, string>, ConnectionstringTester>> ConnectionSucceded;
		
		public event Gimmie<ChangeEventArgs<KeyValuePair<bool, string>, ConnectionstringTester>> ConnectionFailed;
		
		public event Gimmie<ChangeEventArgs<DbConnection, ConnectionstringTester>> ConnectionChanged;
		
		readonly ChangeEventArgs ConnectionSuccededArgs;
		
		readonly KeyValuePair<bool, string> ConnSucceededPair;

		public ConnectionTester()
		{
		}
		
	    public ConnectionTester(DbConnection Connection)
		{
			
			myConnection = Connection;
			
		}
		
		void initalise()
		{
		
			ConnSucceededPair = new KeyValuePair<bool, string>(true, "Connection Succeeded!");
			
			ConnectionSuccededArgs = new ChangeEventArgs(this, ConnSucceededPair);
			
		}
		
		void OnConnecting()
		{
			if(Connecting != null)
				ConnectionSucceded(ConnectionSuccededArgs);
		}
		
		void OnConnectionSucceded()
		{
			if(ConnectionSucceded != null)
				ConnectionSucceded(ConnectionSuccededArgs);
		}

		void OnConnectionFailed(Exception e)
		{
			if(ConnectionFailed != null)
				ConnectionSucceded(new ChangeEventArgs(this, new KeyValuePair<bool, string>(false, "Connection Failure: " + e.Message)));
		}
		
		void ConnectionChanged(DbConnection NewConnection)
		{
			if(ConnectionChanged != null)
				ConnectionChanged(new ChangeEventArgs(this, NewConnection));
		}
		
		public DbConnection Connection
		{
			
			get
			{
				
				return myConnection;
				
			}
			set
			{
				if (myConnection != value) {
					
					myConnection = value;
					
					ConnectionChanged(myConnection);
					
				}
				
			}
			
		}

        public void Test()
        {
			
			OnConnecting()

            try
            {

                myConnection.Open();
				
				OnConnectionSucceded();

			}	
			catch(Exception e)
			{
			
				OnConnectionFailed(e);
					
			}
            } finally
            {

                myConnection.Close();

            }

        }
		
	}
	
}
