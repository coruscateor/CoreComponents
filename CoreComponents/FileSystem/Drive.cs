//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.IO;

namespace CoreComponents.FileSystem
{

	public class Drive : Directory
	{

		DriveInfo myDrive;
		//Directory myRoot;
		
		public Drive(DriveInfo Drive) : base(Drive.Name)
		{
			
			myDrive = Drive;
			
			myName = myDrive.Name;
			
			myWholePath = myName;
			
		}
		
		public DriveInfo DriveInfo
		{
			
			get
			{
				
				return myDrive;
				
			}
			
		}
		
		public override void Create()
		{
			
		}
		
		public override void Delete()
		{
			
			//"Disarmed"
			/*
			mySubDirectories.DeleteAll();
			
			myFiles.DeleteAll();
			*/
		}
		
		public override string Name
       {
      		get
			{
				
				return myName;
				
			}
			
      	}	
		
		protected override void GetFromFullPath(string path)
		{

			myName = Name;
			
		}
		
		public override bool IsOrphin()
		{
			
			return true;
			
		}
		
		public override bool IsRoot()
		{
			
			return true;
			
		}
		
		public override Directory Parent
		{
			
			get
			{
				
				return null;
				
			}
			
			/*
			set
			{
				
			}
			*/
		}
		
		public override string Path
        {
			
          get
			{
				
				return myWholePath;
				
			}
			
        }
		
		
		/*
		public Directory Root
		{
			
			get
			{
				
				
				
			}
			
		}
		*/
		
	}
	
	public static class MountedDrives
	{
		
		static Drive[] myDrives;
		
		//static Drive myMainDrive;
		
		static MountedDrives()
		{
			Refresh();
		}
		
		public static void Refresh()
		{
			
			DriveInfo[] myDriveInfos = System.IO.DriveInfo.GetDrives();
			
			List<Drive> Drivelist = new List<Drive>();
			
			foreach (DriveInfo DI in myDriveInfos)
			{
				
				 Drivelist.Add(new Drive(DI));
				
			}
			
			myDrives = Drivelist.ToArray();
			
			//Fetch the MainDrive
			
			//string sysDir = Environment.SystemDirectory;
			
		}
		
		public static Drive GetDrive(string name)
		{
		
			foreach (Drive Drv in myDrives) {
				
				if(Drv.Name == name)
				{
					
					return Drv;
					
				}
				
			}
			
			return null;
			
		}
		
		/*
		static void FetchMainDrive()
		{
			
			string sysDir = Environment.SystemDirectory;
			
			
			
		}
		*/
		
		public static Drive[] Drives
		{
			
			get
			{
				
				return myDrives;
				
			}
			
		}
		
		/*
		public static Drive MainDrive
		{
		
			get
			{
				
				return myMainDrive;
				
			}
		}
		*/
	}
	
}
